name: Deploy

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 24
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build and copy assets
      run: |
        tsc -p tsconfig.json
        cp src/index.html dist/
        cp -r src/i18n/*.json dist/
        cp assets/icon.svg dist/

    - name: Write credentials.json from secret
      run: |
        echo '${{ secrets.CREDENTIALS }}' > dist/credentials.json

    - name: Add cache busting
      run: |
        CACHE_BUST=$(date +%s)
        sed -i "s/src=\"\.\/app\.js\"/src=\".\/app.js?v=$CACHE_BUST\"/g" dist/index.html

    - name: Minify
      run: |
        find dist -name "*.js" -type f -exec sh -c 'npx terser "$1" --compress --mangle --ecma 2022 -o "$1"' _ {} \;
        find dist -name "*.html" -type f -exec sh -c 'npx html-minifier-terser --remove-attribute-quotes --remove-comments --remove-optional-tags --remove-redundant-attributes --remove-script-type-attributes --use-short-doctype --minify-css true --minify-js true "$1" -o "$1"' _ {} \;

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
